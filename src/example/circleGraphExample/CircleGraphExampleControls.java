package example.circleGraphExample;

import at.htlkaindorf.dorjab18.simulation.*;
import java.text.DecimalFormat;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author dorjab18
 */
public class CircleGraphExampleControls extends AbstractControls {
    private CircleGraphExampleSimulation simulation;
    
    /**
     * Creates new form DefaultControlls
     */
    public CircleGraphExampleControls(CircleGraphExampleSimulation simulation) {
        initComponents();
        
        this.simulation = simulation;
        
        SpinnerNumberModel model = new SpinnerNumberModel(1., .01, 20., .1);
        spRadius.setModel(model);
        
        JSpinner.NumberEditor editor = (JSpinner.NumberEditor)spRadius.getEditor();
        DecimalFormat format = editor.getFormat();
        format.setMinimumFractionDigits(0);
        format.setMaximumFractionDigits(2);
        
        model = new SpinnerNumberModel(1000, 10, 10000, 10);
        spPointCount.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spRadius = new javax.swing.JSpinner();
        spPointCount = new javax.swing.JSpinner();

        setLayout(new java.awt.GridLayout(10, 1));

        spRadius.setToolTipText("Radius");
        spRadius.setValue(1);
        spRadius.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                onRadiusChanged(evt);
            }
        });
        add(spRadius);

        spPointCount.setToolTipText("Point Count");
        spPointCount.setValue(1);
        spPointCount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                onPointCountChanged(evt);
            }
        });
        add(spPointCount);
    }// </editor-fold>//GEN-END:initComponents

    private void onRadiusChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_onRadiusChanged
        try {
            simulation.setRadius(Double.parseDouble(spRadius.getValue().
                    toString()));
        }catch(NumberFormatException e) {
            //Ignore
        }
    }//GEN-LAST:event_onRadiusChanged

    private void onPointCountChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_onPointCountChanged
        try {
            simulation.setPointCount(Integer.parseInt(spPointCount.getValue().
                    toString()));
        }catch(NumberFormatException e) {
            //Ignore
        }
    }//GEN-LAST:event_onPointCountChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner spPointCount;
    private javax.swing.JSpinner spRadius;
    // End of variables declaration//GEN-END:variables
}